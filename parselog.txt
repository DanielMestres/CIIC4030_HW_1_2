   yacc.py:2316:Created by PLY (http://www.dabeaz.com/ply)
   yacc.py:2376:
   yacc.py:2377:Grammar
   yacc.py:2378:
   yacc.py:2380:Rule 0     S' -> exp
   yacc.py:2380:Rule 1     exp -> term
   yacc.py:2380:Rule 2     exp -> term SIGN exp
   yacc.py:2380:Rule 3     exp -> term BINOP exp
   yacc.py:2380:Rule 4     exp -> IF exp THEN exp ELSE exp
   yacc.py:2380:Rule 5     exp -> LET defplus IN exp
   yacc.py:2380:Rule 6     exp -> IN exp
   yacc.py:2380:Rule 7     exp -> MAP idlist TO exp
   yacc.py:2380:Rule 8     exp -> MAP TO exp
   yacc.py:2380:Rule 9     term -> factor
   yacc.py:2380:Rule 10    term -> SIGN term
   yacc.py:2380:Rule 11    term -> BINOP term
   yacc.py:2380:Rule 12    term -> factor DELIMITER explist DELIMITER
   yacc.py:2380:Rule 13    term -> NULL
   yacc.py:2380:Rule 14    term -> INT
   yacc.py:2380:Rule 15    term -> BOOL
   yacc.py:2380:Rule 16    factor -> DELIMITER exp DELIMITER
   yacc.py:2380:Rule 17    factor -> PRIM
   yacc.py:2380:Rule 18    factor -> ID
   yacc.py:2380:Rule 19    explist -> propexplist
   yacc.py:2380:Rule 20    propexplist -> exp
   yacc.py:2380:Rule 21    propexplist -> exp DELIMITER propexplist
   yacc.py:2380:Rule 22    idlist -> propidlist
   yacc.py:2380:Rule 23    propidlist -> ID
   yacc.py:2380:Rule 24    propidlist -> ID DELIMITER propidlist
   yacc.py:2380:Rule 25    defplus -> def
   yacc.py:2380:Rule 26    defplus -> def defplus
   yacc.py:2380:Rule 27    def -> ID BINOP exp DELIMITER
   yacc.py:2398:
   yacc.py:2399:Terminals, with rules where they appear
   yacc.py:2400:
   yacc.py:2404:BINOP                : 3 11 27
   yacc.py:2404:BOOL                 : 15
   yacc.py:2404:DELIMITER            : 12 12 16 16 21 24 27
   yacc.py:2404:ELSE                 : 4
   yacc.py:2404:ID                   : 18 23 24 27
   yacc.py:2404:IF                   : 4
   yacc.py:2404:IN                   : 5 6
   yacc.py:2404:INT                  : 14
   yacc.py:2404:LET                  : 5
   yacc.py:2404:MAP                  : 7 8
   yacc.py:2404:NULL                 : 13
   yacc.py:2404:PRIM                 : 17
   yacc.py:2404:SIGN                 : 2 10
   yacc.py:2404:THEN                 : 4
   yacc.py:2404:TO                   : 7 8
   yacc.py:2404:error                : 
   yacc.py:2406:
   yacc.py:2407:Nonterminals, with rules where they appear
   yacc.py:2408:
   yacc.py:2412:def                  : 25 26
   yacc.py:2412:defplus              : 5 26
   yacc.py:2412:exp                  : 2 3 4 4 4 5 6 7 8 16 20 21 27 0
   yacc.py:2412:explist              : 12
   yacc.py:2412:factor               : 9 12
   yacc.py:2412:idlist               : 7
   yacc.py:2412:propexplist          : 19 21
   yacc.py:2412:propidlist           : 22 24
   yacc.py:2412:term                 : 1 2 3 10 11
   yacc.py:2413:
   yacc.py:1768:
   yacc.py:1769:state 0
   yacc.py:1770:
   yacc.py:1772:    (0) S' -> . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 1
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 1
   yacc.py:1770:
   yacc.py:1772:    (0) S' -> exp .
   yacc.py:1773:
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 2
   yacc.py:1770:
   yacc.py:1772:    (1) exp -> term .
   yacc.py:1772:    (2) exp -> term . SIGN exp
   yacc.py:1772:    (3) exp -> term . BINOP exp
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 1 (exp -> term .)
   yacc.py:1891:    THEN            reduce using rule 1 (exp -> term .)
   yacc.py:1891:    DELIMITER       reduce using rule 1 (exp -> term .)
   yacc.py:1891:    ELSE            reduce using rule 1 (exp -> term .)
   yacc.py:1891:    SIGN            shift and go to state 16
   yacc.py:1891:    BINOP           shift and go to state 17
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 3
   yacc.py:1770:
   yacc.py:1772:    (10) term -> SIGN . term
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    term                           shift and go to state 18
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 4
   yacc.py:1770:
   yacc.py:1772:    (11) term -> BINOP . term
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    term                           shift and go to state 19
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 5
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF . exp THEN exp ELSE exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 20
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 6
   yacc.py:1770:
   yacc.py:1772:    (5) exp -> LET . defplus IN exp
   yacc.py:1772:    (25) defplus -> . def
   yacc.py:1772:    (26) defplus -> . def defplus
   yacc.py:1772:    (27) def -> . ID BINOP exp DELIMITER
   yacc.py:1773:
   yacc.py:1891:    ID              shift and go to state 23
   yacc.py:1893:
   yacc.py:1918:    defplus                        shift and go to state 21
   yacc.py:1918:    def                            shift and go to state 22
   yacc.py:1768:
   yacc.py:1769:state 7
   yacc.py:1770:
   yacc.py:1772:    (6) exp -> IN . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 24
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 8
   yacc.py:1770:
   yacc.py:1772:    (7) exp -> MAP . idlist TO exp
   yacc.py:1772:    (8) exp -> MAP . TO exp
   yacc.py:1772:    (22) idlist -> . propidlist
   yacc.py:1772:    (23) propidlist -> . ID
   yacc.py:1772:    (24) propidlist -> . ID DELIMITER propidlist
   yacc.py:1773:
   yacc.py:1891:    TO              shift and go to state 26
   yacc.py:1891:    ID              shift and go to state 28
   yacc.py:1893:
   yacc.py:1918:    idlist                         shift and go to state 25
   yacc.py:1918:    propidlist                     shift and go to state 27
   yacc.py:1768:
   yacc.py:1769:state 9
   yacc.py:1770:
   yacc.py:1772:    (9) term -> factor .
   yacc.py:1772:    (12) term -> factor . DELIMITER explist DELIMITER
   yacc.py:1773:
   yacc.py:1870:  ! shift/reduce conflict for DELIMITER resolved as shift
   yacc.py:1891:    SIGN            reduce using rule 9 (term -> factor .)
   yacc.py:1891:    BINOP           reduce using rule 9 (term -> factor .)
   yacc.py:1891:    $end            reduce using rule 9 (term -> factor .)
   yacc.py:1891:    THEN            reduce using rule 9 (term -> factor .)
   yacc.py:1891:    ELSE            reduce using rule 9 (term -> factor .)
   yacc.py:1891:    DELIMITER       shift and go to state 29
   yacc.py:1893:
   yacc.py:1900:  ! DELIMITER       [ reduce using rule 9 (term -> factor .) ]
   yacc.py:1904:
   yacc.py:1768:
   yacc.py:1769:state 10
   yacc.py:1770:
   yacc.py:1772:    (16) factor -> DELIMITER . exp DELIMITER
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 30
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 11
   yacc.py:1770:
   yacc.py:1772:    (13) term -> NULL .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 13 (term -> NULL .)
   yacc.py:1891:    BINOP           reduce using rule 13 (term -> NULL .)
   yacc.py:1891:    $end            reduce using rule 13 (term -> NULL .)
   yacc.py:1891:    THEN            reduce using rule 13 (term -> NULL .)
   yacc.py:1891:    DELIMITER       reduce using rule 13 (term -> NULL .)
   yacc.py:1891:    ELSE            reduce using rule 13 (term -> NULL .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 12
   yacc.py:1770:
   yacc.py:1772:    (14) term -> INT .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 14 (term -> INT .)
   yacc.py:1891:    BINOP           reduce using rule 14 (term -> INT .)
   yacc.py:1891:    $end            reduce using rule 14 (term -> INT .)
   yacc.py:1891:    THEN            reduce using rule 14 (term -> INT .)
   yacc.py:1891:    DELIMITER       reduce using rule 14 (term -> INT .)
   yacc.py:1891:    ELSE            reduce using rule 14 (term -> INT .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 13
   yacc.py:1770:
   yacc.py:1772:    (15) term -> BOOL .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 15 (term -> BOOL .)
   yacc.py:1891:    BINOP           reduce using rule 15 (term -> BOOL .)
   yacc.py:1891:    $end            reduce using rule 15 (term -> BOOL .)
   yacc.py:1891:    THEN            reduce using rule 15 (term -> BOOL .)
   yacc.py:1891:    DELIMITER       reduce using rule 15 (term -> BOOL .)
   yacc.py:1891:    ELSE            reduce using rule 15 (term -> BOOL .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 14
   yacc.py:1770:
   yacc.py:1772:    (17) factor -> PRIM .
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       reduce using rule 17 (factor -> PRIM .)
   yacc.py:1891:    SIGN            reduce using rule 17 (factor -> PRIM .)
   yacc.py:1891:    BINOP           reduce using rule 17 (factor -> PRIM .)
   yacc.py:1891:    $end            reduce using rule 17 (factor -> PRIM .)
   yacc.py:1891:    THEN            reduce using rule 17 (factor -> PRIM .)
   yacc.py:1891:    ELSE            reduce using rule 17 (factor -> PRIM .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 15
   yacc.py:1770:
   yacc.py:1772:    (18) factor -> ID .
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       reduce using rule 18 (factor -> ID .)
   yacc.py:1891:    SIGN            reduce using rule 18 (factor -> ID .)
   yacc.py:1891:    BINOP           reduce using rule 18 (factor -> ID .)
   yacc.py:1891:    $end            reduce using rule 18 (factor -> ID .)
   yacc.py:1891:    THEN            reduce using rule 18 (factor -> ID .)
   yacc.py:1891:    ELSE            reduce using rule 18 (factor -> ID .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 16
   yacc.py:1770:
   yacc.py:1772:    (2) exp -> term SIGN . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    exp                            shift and go to state 31
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 17
   yacc.py:1770:
   yacc.py:1772:    (3) exp -> term BINOP . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    exp                            shift and go to state 32
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 18
   yacc.py:1770:
   yacc.py:1772:    (10) term -> SIGN term .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 10 (term -> SIGN term .)
   yacc.py:1891:    BINOP           reduce using rule 10 (term -> SIGN term .)
   yacc.py:1891:    $end            reduce using rule 10 (term -> SIGN term .)
   yacc.py:1891:    THEN            reduce using rule 10 (term -> SIGN term .)
   yacc.py:1891:    DELIMITER       reduce using rule 10 (term -> SIGN term .)
   yacc.py:1891:    ELSE            reduce using rule 10 (term -> SIGN term .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 19
   yacc.py:1770:
   yacc.py:1772:    (11) term -> BINOP term .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 11 (term -> BINOP term .)
   yacc.py:1891:    BINOP           reduce using rule 11 (term -> BINOP term .)
   yacc.py:1891:    $end            reduce using rule 11 (term -> BINOP term .)
   yacc.py:1891:    THEN            reduce using rule 11 (term -> BINOP term .)
   yacc.py:1891:    DELIMITER       reduce using rule 11 (term -> BINOP term .)
   yacc.py:1891:    ELSE            reduce using rule 11 (term -> BINOP term .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 20
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF exp . THEN exp ELSE exp
   yacc.py:1773:
   yacc.py:1891:    THEN            shift and go to state 33
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 21
   yacc.py:1770:
   yacc.py:1772:    (5) exp -> LET defplus . IN exp
   yacc.py:1773:
   yacc.py:1891:    IN              shift and go to state 34
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 22
   yacc.py:1770:
   yacc.py:1772:    (25) defplus -> def .
   yacc.py:1772:    (26) defplus -> def . defplus
   yacc.py:1772:    (25) defplus -> . def
   yacc.py:1772:    (26) defplus -> . def defplus
   yacc.py:1772:    (27) def -> . ID BINOP exp DELIMITER
   yacc.py:1773:
   yacc.py:1891:    IN              reduce using rule 25 (defplus -> def .)
   yacc.py:1891:    ID              shift and go to state 23
   yacc.py:1893:
   yacc.py:1918:    def                            shift and go to state 22
   yacc.py:1918:    defplus                        shift and go to state 35
   yacc.py:1768:
   yacc.py:1769:state 23
   yacc.py:1770:
   yacc.py:1772:    (27) def -> ID . BINOP exp DELIMITER
   yacc.py:1773:
   yacc.py:1891:    BINOP           shift and go to state 36
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 24
   yacc.py:1770:
   yacc.py:1772:    (6) exp -> IN exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 6 (exp -> IN exp .)
   yacc.py:1891:    THEN            reduce using rule 6 (exp -> IN exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 6 (exp -> IN exp .)
   yacc.py:1891:    ELSE            reduce using rule 6 (exp -> IN exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 25
   yacc.py:1770:
   yacc.py:1772:    (7) exp -> MAP idlist . TO exp
   yacc.py:1773:
   yacc.py:1891:    TO              shift and go to state 37
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 26
   yacc.py:1770:
   yacc.py:1772:    (8) exp -> MAP TO . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 38
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 27
   yacc.py:1770:
   yacc.py:1772:    (22) idlist -> propidlist .
   yacc.py:1773:
   yacc.py:1891:    TO              reduce using rule 22 (idlist -> propidlist .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 28
   yacc.py:1770:
   yacc.py:1772:    (23) propidlist -> ID .
   yacc.py:1772:    (24) propidlist -> ID . DELIMITER propidlist
   yacc.py:1773:
   yacc.py:1891:    TO              reduce using rule 23 (propidlist -> ID .)
   yacc.py:1891:    DELIMITER       shift and go to state 39
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 29
   yacc.py:1770:
   yacc.py:1772:    (12) term -> factor DELIMITER . explist DELIMITER
   yacc.py:1772:    (19) explist -> . propexplist
   yacc.py:1772:    (20) propexplist -> . exp
   yacc.py:1772:    (21) propexplist -> . exp DELIMITER propexplist
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1918:    explist                        shift and go to state 40
   yacc.py:1918:    propexplist                    shift and go to state 41
   yacc.py:1918:    exp                            shift and go to state 42
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1768:
   yacc.py:1769:state 30
   yacc.py:1770:
   yacc.py:1772:    (16) factor -> DELIMITER exp . DELIMITER
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       shift and go to state 43
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 31
   yacc.py:1770:
   yacc.py:1772:    (2) exp -> term SIGN exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 2 (exp -> term SIGN exp .)
   yacc.py:1891:    THEN            reduce using rule 2 (exp -> term SIGN exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 2 (exp -> term SIGN exp .)
   yacc.py:1891:    ELSE            reduce using rule 2 (exp -> term SIGN exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 32
   yacc.py:1770:
   yacc.py:1772:    (3) exp -> term BINOP exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 3 (exp -> term BINOP exp .)
   yacc.py:1891:    THEN            reduce using rule 3 (exp -> term BINOP exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 3 (exp -> term BINOP exp .)
   yacc.py:1891:    ELSE            reduce using rule 3 (exp -> term BINOP exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 33
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF exp THEN . exp ELSE exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 44
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 34
   yacc.py:1770:
   yacc.py:1772:    (5) exp -> LET defplus IN . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 45
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 35
   yacc.py:1770:
   yacc.py:1772:    (26) defplus -> def defplus .
   yacc.py:1773:
   yacc.py:1891:    IN              reduce using rule 26 (defplus -> def defplus .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 36
   yacc.py:1770:
   yacc.py:1772:    (27) def -> ID BINOP . exp DELIMITER
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 46
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 37
   yacc.py:1770:
   yacc.py:1772:    (7) exp -> MAP idlist TO . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 47
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 38
   yacc.py:1770:
   yacc.py:1772:    (8) exp -> MAP TO exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 8 (exp -> MAP TO exp .)
   yacc.py:1891:    THEN            reduce using rule 8 (exp -> MAP TO exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 8 (exp -> MAP TO exp .)
   yacc.py:1891:    ELSE            reduce using rule 8 (exp -> MAP TO exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 39
   yacc.py:1770:
   yacc.py:1772:    (24) propidlist -> ID DELIMITER . propidlist
   yacc.py:1772:    (23) propidlist -> . ID
   yacc.py:1772:    (24) propidlist -> . ID DELIMITER propidlist
   yacc.py:1773:
   yacc.py:1891:    ID              shift and go to state 28
   yacc.py:1893:
   yacc.py:1918:    propidlist                     shift and go to state 48
   yacc.py:1768:
   yacc.py:1769:state 40
   yacc.py:1770:
   yacc.py:1772:    (12) term -> factor DELIMITER explist . DELIMITER
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       shift and go to state 49
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 41
   yacc.py:1770:
   yacc.py:1772:    (19) explist -> propexplist .
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       reduce using rule 19 (explist -> propexplist .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 42
   yacc.py:1770:
   yacc.py:1772:    (20) propexplist -> exp .
   yacc.py:1772:    (21) propexplist -> exp . DELIMITER propexplist
   yacc.py:1773:
   yacc.py:1870:  ! shift/reduce conflict for DELIMITER resolved as shift
   yacc.py:1891:    DELIMITER       shift and go to state 50
   yacc.py:1893:
   yacc.py:1900:  ! DELIMITER       [ reduce using rule 20 (propexplist -> exp .) ]
   yacc.py:1904:
   yacc.py:1768:
   yacc.py:1769:state 43
   yacc.py:1770:
   yacc.py:1772:    (16) factor -> DELIMITER exp DELIMITER .
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1891:    SIGN            reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1891:    BINOP           reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1891:    $end            reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1891:    THEN            reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1891:    ELSE            reduce using rule 16 (factor -> DELIMITER exp DELIMITER .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 44
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF exp THEN exp . ELSE exp
   yacc.py:1773:
   yacc.py:1891:    ELSE            shift and go to state 51
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 45
   yacc.py:1770:
   yacc.py:1772:    (5) exp -> LET defplus IN exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 5 (exp -> LET defplus IN exp .)
   yacc.py:1891:    THEN            reduce using rule 5 (exp -> LET defplus IN exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 5 (exp -> LET defplus IN exp .)
   yacc.py:1891:    ELSE            reduce using rule 5 (exp -> LET defplus IN exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 46
   yacc.py:1770:
   yacc.py:1772:    (27) def -> ID BINOP exp . DELIMITER
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       shift and go to state 52
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 47
   yacc.py:1770:
   yacc.py:1772:    (7) exp -> MAP idlist TO exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 7 (exp -> MAP idlist TO exp .)
   yacc.py:1891:    THEN            reduce using rule 7 (exp -> MAP idlist TO exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 7 (exp -> MAP idlist TO exp .)
   yacc.py:1891:    ELSE            reduce using rule 7 (exp -> MAP idlist TO exp .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 48
   yacc.py:1770:
   yacc.py:1772:    (24) propidlist -> ID DELIMITER propidlist .
   yacc.py:1773:
   yacc.py:1891:    TO              reduce using rule 24 (propidlist -> ID DELIMITER propidlist .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 49
   yacc.py:1770:
   yacc.py:1772:    (12) term -> factor DELIMITER explist DELIMITER .
   yacc.py:1773:
   yacc.py:1891:    SIGN            reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1891:    BINOP           reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1891:    $end            reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1891:    THEN            reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1891:    DELIMITER       reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1891:    ELSE            reduce using rule 12 (term -> factor DELIMITER explist DELIMITER .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 50
   yacc.py:1770:
   yacc.py:1772:    (21) propexplist -> exp DELIMITER . propexplist
   yacc.py:1772:    (20) propexplist -> . exp
   yacc.py:1772:    (21) propexplist -> . exp DELIMITER propexplist
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 42
   yacc.py:1918:    propexplist                    shift and go to state 53
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 51
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF exp THEN exp ELSE . exp
   yacc.py:1772:    (1) exp -> . term
   yacc.py:1772:    (2) exp -> . term SIGN exp
   yacc.py:1772:    (3) exp -> . term BINOP exp
   yacc.py:1772:    (4) exp -> . IF exp THEN exp ELSE exp
   yacc.py:1772:    (5) exp -> . LET defplus IN exp
   yacc.py:1772:    (6) exp -> . IN exp
   yacc.py:1772:    (7) exp -> . MAP idlist TO exp
   yacc.py:1772:    (8) exp -> . MAP TO exp
   yacc.py:1772:    (9) term -> . factor
   yacc.py:1772:    (10) term -> . SIGN term
   yacc.py:1772:    (11) term -> . BINOP term
   yacc.py:1772:    (12) term -> . factor DELIMITER explist DELIMITER
   yacc.py:1772:    (13) term -> . NULL
   yacc.py:1772:    (14) term -> . INT
   yacc.py:1772:    (15) term -> . BOOL
   yacc.py:1772:    (16) factor -> . DELIMITER exp DELIMITER
   yacc.py:1772:    (17) factor -> . PRIM
   yacc.py:1772:    (18) factor -> . ID
   yacc.py:1773:
   yacc.py:1891:    IF              shift and go to state 5
   yacc.py:1891:    LET             shift and go to state 6
   yacc.py:1891:    IN              shift and go to state 7
   yacc.py:1891:    MAP             shift and go to state 8
   yacc.py:1891:    SIGN            shift and go to state 3
   yacc.py:1891:    BINOP           shift and go to state 4
   yacc.py:1891:    NULL            shift and go to state 11
   yacc.py:1891:    INT             shift and go to state 12
   yacc.py:1891:    BOOL            shift and go to state 13
   yacc.py:1891:    DELIMITER       shift and go to state 10
   yacc.py:1891:    PRIM            shift and go to state 14
   yacc.py:1891:    ID              shift and go to state 15
   yacc.py:1893:
   yacc.py:1918:    exp                            shift and go to state 54
   yacc.py:1918:    term                           shift and go to state 2
   yacc.py:1918:    factor                         shift and go to state 9
   yacc.py:1768:
   yacc.py:1769:state 52
   yacc.py:1770:
   yacc.py:1772:    (27) def -> ID BINOP exp DELIMITER .
   yacc.py:1773:
   yacc.py:1891:    ID              reduce using rule 27 (def -> ID BINOP exp DELIMITER .)
   yacc.py:1891:    IN              reduce using rule 27 (def -> ID BINOP exp DELIMITER .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 53
   yacc.py:1770:
   yacc.py:1772:    (21) propexplist -> exp DELIMITER propexplist .
   yacc.py:1773:
   yacc.py:1891:    DELIMITER       reduce using rule 21 (propexplist -> exp DELIMITER propexplist .)
   yacc.py:1893:
   yacc.py:1768:
   yacc.py:1769:state 54
   yacc.py:1770:
   yacc.py:1772:    (4) exp -> IF exp THEN exp ELSE exp .
   yacc.py:1773:
   yacc.py:1891:    $end            reduce using rule 4 (exp -> IF exp THEN exp ELSE exp .)
   yacc.py:1891:    THEN            reduce using rule 4 (exp -> IF exp THEN exp ELSE exp .)
   yacc.py:1891:    DELIMITER       reduce using rule 4 (exp -> IF exp THEN exp ELSE exp .)
   yacc.py:1891:    ELSE            reduce using rule 4 (exp -> IF exp THEN exp ELSE exp .)
   yacc.py:1893:
   yacc.py:2453:
   yacc.py:2454:Conflicts:
   yacc.py:2455:
   yacc.py:2458:shift/reduce conflict for DELIMITER in state 9 resolved as shift
   yacc.py:2458:shift/reduce conflict for DELIMITER in state 42 resolved as shift
